.btn {
  cursor: pointer;
  overflow: hidden;
  position: relative;
  background-color: transparent;
  padding: 0;
  transition: filter 0.2s;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-content: flex-start;
  .btnBg {
    background-color: var(--localBgColor);
    backdrop-filter: var(--localBackdropFilter);
    display: block;
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    top: 0;
  }
  .btnLink {
    display: block;
    position: absolute;
    min-height: 100%;
    min-width: 100%;
    z-index: 1;
    left: 0;
    top: 0;
  }
  .btnText {
    color: var(--localTextColor);
    position: relative;
    display: block;
    width: 100%;
  }
  &.bgHover {
    .btnBg::before {
      content: "";
      position: absolute; /* Ensure it is positioned relative to its parent */
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: transparent;
      transition: background-color 0.4s ease;
    }
    .btnText {
      transition: color 0.4s ease;
    }
  }
  &.cfLeft {
    .btnBg::before {
      content: "";
      position: absolute; /* Ensure it is positioned relative to its parent */
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: var(--localBgHoverBorderRadius);
      background-color: var(--localBgHoverColor) !important;
      transform: translateX(-105%);
      transition: transform 0.4s ease;
    }
    .btnText {
      background: linear-gradient(
        to right,
        var(--localTextHoverColor) 50%,
        var(--localTextColor) 50%
      );
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      transition: background-position 0.4s ease;
      background-size: 200% 100%;
      background-position: 100% 0;
    }
  }
  &.cfRight {
    .btnBg::before {
      content: "";
      position: absolute; /* Ensure it is positioned relative to its parent */
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: var(--localBgHoverBorderRadius);
      background-color: var(--localBgHoverColor) !important;
      transform: translateX(105%);
      transition: transform 0.4s ease;
    }
    .btnText {
      background: linear-gradient(
        to right,
        var(--localTextHoverColor) 50%,
        var(--localTextColor) 50%
      );
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      transition: background-position 0.4s ease;
      background-size: 200% 100%;
      background-position: -100% 0;
    }
  }
  &.cfBottom {
    .btnBg::before {
      content: "";
      position: absolute; /* Ensure it is positioned relative to its parent */
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: var(--localBgHoverBorderRadius);
      background-color: var(--localBgHoverColor) !important;
      transform: translateY(105%);
      transition: transform 0.4s ease;
    }
    .btnText {
      background: linear-gradient(
        to bottom,
        var(--localTextHoverColor) 50%,
        var(--localTextColor) 50%
      );
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      transition: background-position 0.4s ease;
      background-size: 100% 200%;
      background-position: 0 -100%;
    }
  }
  &.cfTop {
    .btnBg::before {
      content: "";
      position: absolute; /* Ensure it is positioned relative to its parent */
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: var(--localBgHoverBorderRadius);
      background-color: var(--localBgHoverColor) !important;
      transform: translateY(-105%);
      transition: transform 0.4s ease;
    }
    .btnText {
      background: linear-gradient(
        to bottom,
        var(--localTextHoverColor) 50%,
        var(--localTextColor) 50%
      );
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      transition: background-position 0.4s ease;
      background-size: 100% 200%;
      background-position: 0 100%;
    }
  }
  &.brc {
    transition: border-radius 0.4s ease;
    .btnBg::before {
      content: "";
      position: absolute; /* Ensure it is positioned relative to its parent */
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: transparent;
      transition: background-color 0.4s ease;
    }
    .btnText {
      transition: color 0.1s ease;
    }
  }
  &.scaleForward {
    transition: transform 0.4s ease;
  }
  &.scaleBackward {
    transition: transform 0.4s ease;
  }
}

@media only screen and (pointer: fine) {
  .btn {
    &:hover {
      filter: var(--localFilter);
    }
    &.bgHover:hover {
      .btnBg::before {
        background-color: var(--localBgHoverColor) !important;
      }
      .btnText {
        color: var(--localTextHoverColor) !important;
      }
    }
    &.cfLeft:hover {
      .btnText {
        background-position: 0 0;
      }
      .btnBg::before {
        transform: translateX(0);
      }
    }
    &.cfRight:hover {
      .btnText {
        background-position: 0 0;
      }
      .btnBg::before {
        transform: translateX(0);
      }
    }
    &.cfBottom:hover {
      .btnText {
        background-position: 0 0;
      }
      .btnBg::before {
        transform: translateY(0);
      }
    }
    &.cfTop:hover {
      .btnText {
        background-position: 0 0;
      }
      .btnBg::before {
        transform: translateY(0);
      }
    }
    &.brc:hover {
      border-radius: var(--localBorderHoverRadius) !important;
      .btnBg::before {
        background-color: var(--localBgHoverColor) !important;
      }
      .btnText {
        color: var(--localTextHoverColor);
      }
    }
    &.scaleForward:hover {
      transform: scale(1.1);
    }
    &.scaleBackward:hover {
      transform: scale(0.9);
    }
  }
}
